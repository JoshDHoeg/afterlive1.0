# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-02 17:25
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True, unique=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=40, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('background', models.TextField(blank=True, db_column='Background', null=True)),
                ('profile', models.TextField(blank=True, db_column='Profile', null=True)),
                ('bio', models.TextField(blank=True, db_column='Bio', null=True)),
            ],
            options={
                'db_table': 'account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('artist_id', models.AutoField(db_column='Artist_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=256, null=True)),
            ],
            options={
                'db_table': 'artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artist_Follower',
            fields=[
                ('artist_user_id', models.AutoField(db_column='Artist_User_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'artist_follower',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('content_id', models.AutoField(db_column='Content_ID', primary_key=True, serialize=False)),
                ('account', models.CharField(db_column='Account', max_length=256)),
                ('origin', models.CharField(db_column='Origin', max_length=9)),
                ('content_value', models.TextField(db_column='Content_Value')),
            ],
            options={
                'db_table': 'content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(db_column='Country_ID', primary_key=True, serialize=False)),
                ('country_code', models.CharField(max_length=2)),
                ('country_name', models.CharField(db_column='Country_Name', max_length=256)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('culture_id', models.AutoField(db_column='Culture_ID', primary_key=True, serialize=False)),
                ('tag', models.CharField(db_column='Tag', max_length=256)),
            ],
            options={
                'db_table': 'culture',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('family_id', models.AutoField(db_column='Family_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
            ],
            options={
                'db_table': 'family',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Festival',
            fields=[
                ('festival_id', models.AutoField(db_column='Festival_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('start_date', models.DateField(blank=True, db_column='Start_Date', null=True)),
                ('end_date', models.DateField(blank=True, db_column='End_Date', null=True)),
            ],
            options={
                'db_table': 'festival',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Festival_Artist',
            fields=[
                ('festival_artist_id', models.AutoField(db_column='Festival_Artist_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'festival_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Festival_Follower',
            fields=[
                ('festival_user_id', models.AutoField(db_column='Festival_User_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'festival_follower',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Festival_Photographer',
            fields=[
                ('photographer_festival_id', models.IntegerField(db_column='Photographer_Festival_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'festival_has_photographer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genre_id', models.AutoField(db_column='Genre_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
            ],
            options={
                'db_table': 'genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('identity_id', models.AutoField(db_column='Identity_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
            ],
            options={
                'db_table': 'identity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('linkid', models.AutoField(db_column='LinkID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('facebook', models.CharField(blank=True, db_column='Facebook', max_length=256, null=True)),
                ('instagram', models.CharField(blank=True, db_column='Instagram', max_length=256, null=True)),
                ('youtube', models.CharField(blank=True, db_column='Youtube', max_length=256, null=True)),
                ('twitter', models.CharField(blank=True, db_column='Twitter', max_length=256, null=True)),
                ('spotify', models.CharField(blank=True, db_column='Spotify', max_length=256, null=True)),
                ('soundcloud', models.CharField(blank=True, db_column='Soundcloud', max_length=256, null=True)),
                ('tumblr', models.CharField(blank=True, db_column='Tumblr', max_length=256, null=True)),
                ('website', models.CharField(blank=True, db_column='Website', max_length=256, null=True)),
            ],
            options={
                'db_table': 'link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Photographer',
            fields=[
                ('photographer_id', models.AutoField(db_column='Photographer_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('first_name', models.CharField(blank=True, db_column='First_Name', max_length=256, null=True)),
                ('last_name', models.CharField(blank=True, db_column='Last_Name', max_length=256, null=True)),
                ('gender', models.CharField(blank=True, choices=[('0', 'Female'), ('1', 'Male')], db_column='Gender', max_length=1, null=True)),
            ],
            options={
                'db_table': 'photographer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Photographer_Artist',
            fields=[
                ('photographer_artist_id', models.AutoField(db_column='Photographer_Artist_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'photographer_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Photographer_Follower',
            fields=[
                ('up_id', models.AutoField(db_column='UP_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'photographer_follower',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playlist_Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'playlist_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('state_id', models.AutoField(db_column='State_ID', primary_key=True, serialize=False)),
                ('state', models.CharField(db_column='State', max_length=256)),
                ('state_code', models.CharField(db_column='State_code', max_length=2)),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('type_id', models.AutoField(db_column='Type_ID', primary_key=True, serialize=False)),
                ('content_type', models.CharField(db_column='Content_Type', max_length=256)),
            ],
            options={
                'db_table': 'type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(db_column='User_ID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, db_column='First_Name', max_length=256, null=True)),
                ('last_name', models.CharField(blank=True, db_column='Last_Name', max_length=256, null=True)),
                ('gender', models.CharField(blank=True, choices=[('0', 'Female'), ('1', 'Male')], db_column='Gender', max_length=1, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPlaylists',
            fields=[
                ('playlistid', models.AutoField(db_column='PlaylistID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
            ],
            options={
                'db_table': 'user_playlists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPlaylists_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user playlists_has_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_id', models.AutoField(db_column='Venue_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=256, null=True)),
            ],
            options={
                'db_table': 'venue',
                'managed': False,
            },
        ),
    ]
